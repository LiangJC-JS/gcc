#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: LiangJC
#=================================================

name: auto build gcc 

on:
  repository_dispatch:
  workflow_dispatch:
        
#  release:
#    types: [published]
    
#  push:
#    branches: 
#      - master
      
#  schedule:
#    - cron: 0 */48 * * *
  
#  watch:
#    types: started

### 环境变量设置
env:
# 上传固件到 Github Releases
  UPLOAD_RELEASES: true
# 上传固件到 Github Artifacts
#  UPLOAD_ARTIFACTS: false
# 上传 bin 文件夹到 Github Artifacts
#  UPLOAD_BIN_ARTIFACTS: false
# 删除无用文件以增加编译空间
  DELETE_USELESS_FILES: true
# 删除早期的 workflow 任务
  DELETE_OLD_WORKFLOW: true

jobs:
  building:
    runs-on: ubuntu-20.04

    steps:
    - name: 检查
      uses: actions/checkout@main
      
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex node-uglify git gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync rename checkinstall m4 mingw-w64

    - name: 更新gcc
      run: |
        cd
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100
        gcc -v

    - name: 下载源码并编译
      run: |
        cd ~
        GCCNAME=gcc-11.2.0.tar.gz
        wget -O $GCCNAME https://github.com/gcc-mirror/gcc/archive/refs/tags/releases/gcc-11.2.0.tar.gz
        tar -xf $GCCNAME
        GCCDIR=$PWD/`tar -tf gcc-*.tar.gz | head -1`
        GCCVER=`echo $GCCNAME | cut -d "." -f1`
        GCCPROGRAM=`echo $GCCNAME | cut -c4-8`
        cd $GCCDIR
        contrib/download_prerequisites
        cd ..
        mkdir -p gcc_build
        cd gcc_build
        ${GCCDIR}configure --prefix=/usr/local/$GCCVER --enable-languages=c,c++,go --enable-checking=release --with-system-zlib --enable-multilib --program-suffix=$GCCPROGRAM --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --disable-werror --with-target-system-zlib=auto --with-pkgversion=liangjc@ubuntu_20.041
        make -j$(nproc)
        sudo checkinstall -D -y --maintainer=liangjc@ubuntu_2004 --pkgname=gcc-11 --pkgversion=1.0 --pkgrelease=1 --pkglicense=GPL --pkgarch=amd64 --deldesc="" --nodoc
        mkdir -p ../gcc_finish
        sudo cp -a *.deb ../gcc_finish

#    - name: 上传到release
#      uses: svenstaro/upload-release-action@v2
#      if: env.UPLOAD_RELEASES == 'true' && !cancelled()
#      with:
#        repo_token: ${{ secrets.GITHUB_TOKEN }}
#        file: gcc_finish/*
#        file_glob: true
#        tag: gcc-releases-11
#        overwrite: true

    - name : 上传到artifact
      uses: actions/upload-artifact@main
      with:
        name: gcc-release-11.2.0
        path: ~/gcc_finish
